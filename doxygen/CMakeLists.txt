if(BUILD_DOCUMENTATION)
    option(DOXYGEN__BUILD_INTERNAL 
        "Should we build the internal doxygen documentation?" FALSE)
    option(DOXYGEN_BUILD_FULLNAME 
        "Should we generate fully qualified class and functions names?" TRUE)
    option(DOXYGEN_BUILD_TODOLIST 
        "Should we generate a TODO list ?" TRUE)
    option(DOXYGEN_BUILD_TESTLIST 
        "Should we generate a unit tests list ?" TRUE)
    option(DOXYGEN_BUILD_WARNINGS 
        "Should we show warnings when generating docs ?" TRUE)
    option(DOXYGEN_BUILD_SOURCESBROWSER 
        "Should we include source browsing capability?" TRUE)
    option(DOXYGEN_INLINESOURCE 
        "Should we include function and classes bodies in docs?" TRUE)
    option(DOXYGEN_BUILD_HTML 
        "Should we generate HTML format docs?" TRUE)
    option(DOXYGEN_BUILD_LATEX 
        "Should we generate LATEX format docs?" TRUE)
    if(DOXYGEN_BUILD_LATEX)
        option(DOXYGEN_BUILD_LATEX_BATCHMODE "Should we generate LATEX format docs int batchmode?" TRUE)
        option(DOXYGEN_BUILD_LATEXT_TIMESTAMP "Should we add date and time of in latex files?" TRUE)
    endif()
    option(DOXYGEN_BUILD_RTF "Should we generate RTF format docs?" FALSE)
    option(DOXYGEN_BUILD_MAN "Should we generate MAN format docs?" FALSE)
    option(DOXYGEN_BUILD_XML "Should we generate XML format docs?" FALSE)
    option(DOXYGEN_BUILD_DOCBOOK "Should we generate docbook format docs?" FALSE)
    set(PROJECT_BRIEF "\"A modern signal / slot system\"")
    set(PROJECT_LOGO)
    if(DOXYGEN_BUILD_INTERNAL)
        set(DOXYGEN_INTERNAL "YES")
    else()
        set(DOXYGEN_INTERNAL "NO")
    endif()
    if(DOXYGEN_BUILD_FULLNAME)
        set(DOXYGEN_HIDE_SCOPES "NO")
    else()
        set(DOXYGEN_HIDE_SCOPES "YES")
    endif()
    if(DOXYGEN_BUILD_TODOLIST)
        set(DOXYGEN_TODO "YES")
    else()
        set(DOXYGEN_TODO "NO")
    endif()
    if(DOXYGEN_BUILD_TESTLIST)
        set(DOXYGEN_TESTS "YES")
    else()
        set(DOXYGEN_TESTS "NO")
    endif()
    if(DOXYGEN_BUILD_WARNINGS)
        set(DOXYGEN_WARNINGS "YES")
    else()
        set(DOXYGEN_WARNINGS "NO")
    endif()
    if(DOXYGEN_BUILD_SOURCESBROWSER)
        set(DOXYGEN_SOURCEBROWSER "YES")
    else()
        set(DOXYGEN_SOURCEBROWSER "NO")
    endif()
    if(DOXYGEN_INLINESOURCE)
        set(DOXYGEN_INLINESOURCES "YES")
    else()
        set(DOXYGEN_INLINESOURCES "NO")
    endif()
    if(DOXYGEN_BUILD_HTML)
        set(DOXYGEN_HTML "YES")
    else()
        set(DOXYGEN_HTML "NO")
    endif()
    set(DOXYGEN_HTMLHELP "NO")
    set(DOXYGEN_HCC)
    set(DOXYGEN_QHP "NO")
    set(DOXYGEN_QHELPGENERATOR)
    set(DOXYGEN_ECLIPSEHELP "NO")
    if(DOXYGEN_BUILD_LATEX)
        set(DOXYGEN_LATEX "YES")
    else()
        set(DOXYGEN_LATEX "NO")
    endif()
    set(DOXYGEN_LATEX_COMMAND "latex")
    set(DOXYGEN_LATEX_INDEX "makeindex")
    if(DOXYGEN_BUILD_LATEX_BATCHMODE)
        set(LATEX_BATCHMODE "YES")
    else()
        set(LATEX_BATCHMODE "NO")
    endif()
    if(DOXYGEN_BUILD_LATEXT_TIMESTAMP)
        set(LATEX_TIMESTAMP "YES")
    else()
        set(LATEX_TIMESTAMP "NO")
    endif()
    if(DOXYGEN_BUILD_RTF)
        set(DOXYGEN_RTF "YES")
    else()
        set(DOXYGEN_RTF "NO")
    endif()
    if(DOXYGEN_BUILD_MAN)
        set(DOXYGEN_MAN "YES")
    else()
        set(DOXYGEN_MAN "NO")
    endif()
    if(DOXYGEN_BUILD_XML)
        set(DOXYGEN_XML "YES")
    else()
        set(DOXYGEN_XML "NO")
    endif()
    if(DOXYGEN_BUILD_DOCBOOK)
        set(DOXYGEN_DOCBOOK "YES")
    else()
        set(DOXYGEN_DOCBOOK "NO")
    endif()
    set(DOXYGEN_PERL_PATH /usr/bin/perl)
    set(DOXYGEN_DYAGRAM "YES")
    set(DOXYGEN_MSCGEN)
    set(DOXYGEN_HAVEDOT "YES")
    set(DOXYGEN_DOT_PATH)

    if(NOT DOXYGEN_FOUND)
        message(FATAL_ERROR "Doxygen is needed to build the documentation.")
    endif()

    set(doxyfile_in ${CMAKE_CURRENT_SOURCE_DIR}/Doxyfile.in)
    set(outdir ${CMAKE_CURRENT_BINARY_DIR}/../docs)
    set(doxyfile ${outdir}/Doxyfile)

    configure_file(${doxyfile_in} ${doxyfile} @ONLY)

    add_custom_target(doc
        COMMAND ${DOXYGEN_EXECUTABLE} ${doxyfile}
        WORKING_DIRECTORY ${outdir}/
        COMMENT "Generating API documentation with Doxygen"
        VERBATIM)

    install(DIRECTORY ${outdir}/ DESTINATION share/doc)
endif()
